//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.05.05 at 08:43:06 PM EDT 
//


package org.openfmb.xsd._2015._12.openfmb.commonmodule;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FlowDirectionKind.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FlowDirectionKind">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="forward"/>
 *     &lt;enumeration value="lagging"/>
 *     &lt;enumeration value="leading"/>
 *     &lt;enumeration value="net"/>
 *     &lt;enumeration value="noDirection"/>
 *     &lt;enumeration value="q1minusQ4"/>
 *     &lt;enumeration value="q1plusQ2"/>
 *     &lt;enumeration value="q1plusQ3"/>
 *     &lt;enumeration value="q1plusQ4"/>
 *     &lt;enumeration value="q2minusQ3"/>
 *     &lt;enumeration value="q2plusQ3"/>
 *     &lt;enumeration value="q2plusQ4"/>
 *     &lt;enumeration value="q3minusQ2"/>
 *     &lt;enumeration value="q3plusQ4"/>
 *     &lt;enumeration value="quadrant1"/>
 *     &lt;enumeration value="quadrant2"/>
 *     &lt;enumeration value="quadrant3"/>
 *     &lt;enumeration value="quadrant4"/>
 *     &lt;enumeration value="reverse"/>
 *     &lt;enumeration value="total"/>
 *     &lt;enumeration value="totalByPhase"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FlowDirectionKind")
@XmlEnum
public enum FlowDirectionKind {


    /**
     * "Delivered," or "Imported" as defined 61968-2.
     * 
     * Forward Active Energy is a positive kWh value as one would naturally expect to find as energy is supplied by the utility and consumed at the service.
     * 
     * Forward Reactive Energy is a positive VArh value as one would naturally expect to find in the presence of inductive loading.
     * 
     * In polyphase metering, the forward energy register is incremented when the sum of the phase energies is greater than zero:
     * 
     * <img src="HTS_1.PNG" width="209" height="16" border="0" alt="graphic"/>
     * 
     */
    @XmlEnumValue("forward")
    FORWARD("forward"),

    /**
     * Typically used to describe that a power factor is lagging the reference value. 
     * Note 1: When used to describe VA, “lagging” describes a form of measurement where reactive power is considered in all four quadrants, but real power is considered only in quadrants I and IV.
     * Note 2: When used to describe power factor, the term “Lagging” implies that the PF is negative. The term “lagging” in this case takes the place of the negative sign. If a signed PF value is to be passed by the data producer, then the direction of flow enumeration zero (none) should be used in order to avoid the possibility of creating an expression that employs a double negative. The data consumer should be able to tell from the sign of the data if the PF is leading or lagging. This principle is analogous to the concept that “Reverse” energy is an implied negative value, and to publish a negative reverse value would be ambiguous.
     * Note 3: Lagging power factors typically indicate inductive loading.
     * 
     */
    @XmlEnumValue("lagging")
    LAGGING("lagging"),

    /**
     * Typically used to describe that a power factor is leading the reference value.
     * Note: Leading power factors typically indicate capacitive loading.
     * 
     */
    @XmlEnumValue("leading")
    LEADING("leading"),

    /**
     * |Forward| - |Reverse|, See 61968-2.
     * 
     * Note: In some systems, the value passed as a “net” value could become negative. In other systems the value passed as a “net” value is always a positive number, and rolls-over and rolls-under as needed. 
     * 
     */
    @XmlEnumValue("net")
    NET("net"),

    /**
     * Not Applicable (N/A)
     * 
     */
    @XmlEnumValue("noDirection")
    NO_DIRECTION("noDirection"),

    /**
     * Q1 minus Q4
     * 
     */
    @XmlEnumValue("q1minusQ4")
    Q_1_MINUS_Q_4("q1minusQ4"),

    /**
     * Reactive positive quadrants. (The term “lagging” is preferred.)
     * 
     */
    @XmlEnumValue("q1plusQ2")
    Q_1_PLUS_Q_2("q1plusQ2"),

    /**
     * Quadrants 1 and 3
     * 
     */
    @XmlEnumValue("q1plusQ3")
    Q_1_PLUS_Q_3("q1plusQ3"),

    /**
     * Quadrants 1 and 4 usually represent forward active energy
     * 
     */
    @XmlEnumValue("q1plusQ4")
    Q_1_PLUS_Q_4("q1plusQ4"),

    /**
     * Q2 minus Q3
     * 
     */
    @XmlEnumValue("q2minusQ3")
    Q_2_MINUS_Q_3("q2minusQ3"),

    /**
     * Quadrants 2 and 3 usually represent reverse active energy
     * 
     */
    @XmlEnumValue("q2plusQ3")
    Q_2_PLUS_Q_3("q2plusQ3"),

    /**
     * Quadrants 2 and 4
     * 
     */
    @XmlEnumValue("q2plusQ4")
    Q_2_PLUS_Q_4("q2plusQ4"),

    /**
     * Q3 minus Q2
     * 
     */
    @XmlEnumValue("q3minusQ2")
    Q_3_MINUS_Q_2("q3minusQ2"),

    /**
     * Reactive negative quadrants. (The term “leading” is preferred.)
     * 
     */
    @XmlEnumValue("q3plusQ4")
    Q_3_PLUS_Q_4("q3plusQ4"),

    /**
     * Q1 only
     * 
     */
    @XmlEnumValue("quadrant1")
    QUADRANT_1("quadrant1"),

    /**
     * Q2 only
     * 
     */
    @XmlEnumValue("quadrant2")
    QUADRANT_2("quadrant2"),

    /**
     * Q3 only
     * 
     */
    @XmlEnumValue("quadrant3")
    QUADRANT_3("quadrant3"),

    /**
     * Q4 only
     * 
     */
    @XmlEnumValue("quadrant4")
    QUADRANT_4("quadrant4"),

    /**
     * Reverse Active Energy is equivalent to "Received," or "Exported" as defined in 61968-2.
     * 
     * Reverse Active Energy is a positive kWh value as one would expect to find when energy is backfed by the service onto the utility network.
     * 
     * Reverse Reactive Energy is a positive VArh value as one would expect to find in the presence of capacitive loading and a leading Power Factor.
     * 
     * In polyphase metering, the reverse energy register is incremented when the sum of the phase energies is less than zero:
     * 
     * <img src="HTS_1.PNG" width="209" height="16" border="0" alt="graphic"/>
     * 
     * Note: The value passed as a reverse value is always a positive value. It is understood by the label “reverse” that it represents negative flow.
     * 
     */
    @XmlEnumValue("reverse")
    REVERSE("reverse"),

    /**
     * |Forward| + |Reverse|, See 61968-2.
     * The sum of the commodity in all quadrants Q1+Q2+Q3+Q4.
     * 
     * In polyphase metering, the total energy register is incremented when the absolute value of the sum of the phase energies is greater than zero:
     * 
     * <img src="HTS_1.PNG" width="217" height="16" border="0" alt="graphic"/>
     * 
     */
    @XmlEnumValue("total")
    TOTAL("total"),

    /**
     * In polyphase metering, the total by phase energy register is incremented when the sum of the absolute values of the phase energies is greater than zero:
     * 
     * <img src="HTS_1.PNG" width="234" height="16" border="0" alt="graphic"/>
     * 
     * In single phase metering, the formulas for “Total” and “Total by phase” collapse to the same expression. For communication purposes however, the “Total” enumeration should be used with single phase meter data.
     * 
     */
    @XmlEnumValue("totalByPhase")
    TOTAL_BY_PHASE("totalByPhase");
    private final String value;

    FlowDirectionKind(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FlowDirectionKind fromValue(String v) {
        for (FlowDirectionKind c: FlowDirectionKind.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
